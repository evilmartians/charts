# Applications to backup
apps: []
# - name: example
#   backupSchedule: "0 2 * * *"
#   backupTimeout: 7200
#   cleanupSchedule: "0 5 * * *"
#   cleanupTimeout: 7200
#   checkSchedule: "0 12 * * *"
#   checkTimeout: 3600
#   pruneSchedule: "0 20 * * *"
#   pruneTimeout: 14400
#   unlockSchedule: "0 20 * * *"
#   unlockTimeout: 60
#   nodeSelector: {}
#   resources:
#     limits:
#       cpu: 1
#       memory: 1Gi
#     requests:
#       cpu: 1
#       memory: 1Gi
#   tolerations: []
#   keep:
#     last: 5
#     within: 1m
#   resticCredentials:
#     RESTIC_REPOSITORY: s3:fra1.digitaloceanspaces.com/example/example
#     RESTIC_PASSWORD: CHANGEME
#     AWS_ACCESS_KEY_ID: CHANGEME
#     AWS_SECRET_ACCESS_KEY: CHANGEME
#     GOOGLE_PROJECT_ID: CHANGEME
#     GOOGLE_APPLICATION_CREDENTIALS: /config/gs-secret-restic-key.json
#   postgresCredentials:
#     PGDATABASE: example_db
#     PGUSER: example_user
#     PGPASSWORD: example_password
#     PGHOST: pg.example.com
#   configFiles:
#     gs-secret-restic-key.json: <base64-encoded gcloud json file>

# Enables and configures a CloudSQL proxy instance.
# Use it if you do not have a private-network-connected PG db instance.
proxy:
  affinity: {}
  credentialsJson: ""
  enabled: false
  image:
    repository: gcr.io/cloudsql-docker/gce-proxy
    tag: 1.16
    pullPolicy: IfNotPresent
  instances: ""
  nodeSelector: {}
  replicaCount: 1
  resources: {}
  secretName: cloudsql-proxy-credentials
  service:
    type: ClusterIP
    port: 5432
  tolerations: []

restic:
  affinity: {}
  image:
    repository: quay.io/evl.ms/pgrestic
    tag: 0.9.6-r0-12.2-alpine
    pullPolicy: IfNotPresent
